{"title":"把自己的Hexo博客做成小程序（1）————利用restful获取数据","slug":"hexo_wechatApp_1","date":"2017-09-03T11:21:47.000Z","updated":"2017-09-03T11:53:35.344Z","comments":true,"path":"api/articles/hexo_wechatApp_1.json","excerpt":"  从一位大神的网站（https://devework.com/devework-wxapp.html ） 上看到利用WordPress的REST API,写出了WordPress的小程序。见猎心喜，也想要把自己的hexo博客做成小程序来玩玩。由于hexo自己不带有REST API，本来想自己写个爬虫。在去写之前搜了下hexo的插件，发现了这个插件：hexo-generator-restful，他可以生成 restful 风格的 json 数据，正好适用于我的需求。  安装好插件以后，先尝试看一下返回的json数据：<br>   [Figure]   图中界面是使用了chrome的JSONView 插件将json数据格式化后的效果。","covers":["https://i.loli.net/2017/09/03/59abe83775d53.png","https://i.loli.net/2017/09/03/59abea532b7b9.png","https://i.loli.net/2017/09/03/59abec0e93780.png"],"content":"<p>  从一位大神的网站（<a href=\"https://devework.com/devework-wxapp.html\" target=\"_blank\" rel=\"external\">https://devework.com/devework-wxapp.html</a> ） 上看到利用WordPress的REST API,写出了WordPress的小程序。见猎心喜，也想要把自己的hexo博客做成小程序来玩玩。</p>\n<p>由于hexo自己不带有REST API，本来想自己写个爬虫。在去写之前搜了下hexo的插件，发现了这个插件：<a href=\"https://github.com/yscoder/hexo-generator-restful\" target=\"_blank\" rel=\"external\">hexo-generator-restful</a>，他可以生成 restful 风格的 json 数据，正好适用于我的需求。</p>\n<p>  安装好插件以后，先尝试看一下返回的json数据：<br>  <img src=\"https://i.loli.net/2017/09/03/59abe83775d53.png\" alt=\"hexo_wechatApp_1(1).png\"><br>  图中界面是使用了chrome的JSONView 插件将json数据格式化后的效果。<a id=\"more\"></a></p>\n<p>  好了，数据可以拿到了，在小程序中应该怎么获取呢?<br>  首先当然要在小程序平台的设置里添加“服务器域名”-&gt;“request合法域名”为“ <a href=\"https://heydo.github.io\" target=\"_blank\" rel=\"external\">https://heydo.github.io</a> ” 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">onLoad: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</div><div class=\"line\">    wx.request(&#123;</div><div class=\"line\">      url: <span class=\"string\">\"https://heydo.github.io/api/posts.json\"</span>,</div><div class=\"line\">      success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//console.log(response.data)</span></div><div class=\"line\">        that.setData(&#123;</div><div class=\"line\">          title:response.data.data[<span class=\"number\">0</span>].title,</div><div class=\"line\">        &#125;);</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;,</div></pre></td></tr></table></figure>\n<p>console.log(response.data)打印出来的内容就是：<br><img src=\"https://i.loli.net/2017/09/03/59abea532b7b9.png\" alt=\"hexo_wechatApp_1(2).png\"></p>\n<p>当在函数中有个请求(wx.request)时，直接使用this.data会报错：<strong>this.setData is not a function.</strong><br>解决方法就是 ：在请求(wx.request)外面添加:var that=this;将success中的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.setData(&#123;</div><div class=\"line\">   data1: <span class=\"literal\">true</span></div><div class=\"line\"> &#125;)</div></pre></td></tr></table></figure>\n<p>改为：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">that.setData(&#123;</div><div class=\"line\">   data1: <span class=\"literal\">true</span></div><div class=\"line\"> &#125;)</div></pre></td></tr></table></figure></p>\n<p>在相应的WXML文件里写上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;view <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-container\"</span>&gt;</div><div class=\"line\">           &lt;text <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-title\"</span>&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/text&gt;</span></div><div class=\"line\"><span class=\"regexp\">&lt;/</span>view&gt;</div></pre></td></tr></table></figure>\n<p>就可以在小程序中获取到博客中的文章标题了。<br><img src=\"https://i.loli.net/2017/09/03/59abec0e93780.png\" alt=\"hexo_wechatApp_1(3).png\"></p>\n","categories":[{"name":"编程","path":"api/categories/编程.json"},{"name":"微信小程序","path":"api/categories/微信小程序.json"}],"tags":[{"name":"hexo","path":"api/tags/hexo.json"},{"name":"微信小程序","path":"api/tags/微信小程序.json"}]}